name: Deploying ECR by manpreet kaur grewal

on:
  push:
    branches: [ master ]

  workflow_dispatch:
  

jobs:
  
  build:
    
    name: Image
    runs-on: ubuntu-latest

    
    steps:
     
    - uses: actions/checkout@v3

     
    - name: Login Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
       
      env: 
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
          AWS_REGION: us-east-1
          

    - name: Triggering image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: manpreet
        IMAGE_TAG: dogs
      run: |
        cd dogs/
        ls -ltra
        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Unit test
        docker run -d -p 8080:80 --name assignment1-dogs $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        curl localhost:8080 -vvv
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Triggering image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: manpreet
        IMAGE_TAG: cats
        
      run: |
        cd cats/
        ls -ltra
        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Unit test
        docker run -d -p 8081:80 --name assignment1-cats $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        curl localhost:8081 -vvv
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
